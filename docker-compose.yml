# Start with version 3.8 of Docker Compose, which is a modern and stable version.
version: '3.8'

# Define the collection of services (containers) that make up the application.
services:

  # --- The Backend Node.js Service ---
  # This service runs your Node.js server.
  backend:
    # Tell Docker to build this container using the Dockerfile found inside the './backend' directory.
    build: ./backend
    # Tell Docker to name the container 'eruptible-pm-backend' for easier identification.
    container_name: eruptible-pm-backend
    # Load the secret variables (like API keys) from the .env file located in the backend directory.
    # This keeps your secrets out of the code.
    env_file:
      - ./backend/.env
    # We don't need to expose ports here to the host machine, as the Nginx proxy will handle communication internally.
    networks:
      - npm_network

  # --- The Nginx Proxy Service ---
  # This service is the public entry point. It receives all web traffic and decides where it should go.
  # It serves the React frontend and proxies API requests to the backend.
  proxy:
    # Use our custom frontend image that contains both the React app and Nginx configuration
    build:
      context: .
      dockerfile: Dockerfile.frontend
    # Name the container for easier identification.
    container_name: eruptible-pm-proxy
    # Map port 8080 on your VPS to port 80 inside this container. This avoids conflict with Nginx Proxy Manager.
    ports:
      - "8080:80"
    # This is crucial. It tells Docker not to start the proxy until the backend service
    # is running, preventing connection errors on startup.
    depends_on:
      - backend
    networks:
      - npm_network

# Define networks
networks:
  npm_network:
    external: true
    name: npm-stack_default
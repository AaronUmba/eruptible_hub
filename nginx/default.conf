# Define a server block that listens for all incoming web traffic on port 80.
# This will be used by Nginx Proxy Manager to forward requests to our app.
server {
    listen 80;
    server_name _; # Accept any hostname, Nginx Proxy Manager will handle the routing

    # Define the default behavior for all requests.
    location / {
        # The root directory where our frontend files (index.html, bundle.js) are located.
        root   /usr/share/nginx/html;
        # The default file to serve.
        index  index.html;
        # This is key for Single-Page Applications (like React). If a user requests a specific
        # URL (e.g., /dashboard/settings), Nginx won't find that file. This line tells Nginx
        # to serve index.html instead, allowing the React Router to handle the URL.
        try_files $uri $uri/ /index.html;
    }

    # Define specific behavior for any request whose URL starts with /api/
    location /api/ {
        # Pass this request on to our backend service. The name 'backend' matches the
        # service name we defined in docker-compose.yml. Docker's internal networking
        # will resolve 'backend' to the correct container's IP address.
        proxy_pass http://backend:3001;

        # These headers are important to pass along original request information
        # to the backend service, which is useful for logging and security.
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}